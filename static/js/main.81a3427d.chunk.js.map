{"version":3,"sources":["utils.jsx","Functions-container.tsx","Functions.tsx","theme.js","App.js","index.js"],"names":["useInfoStyles","makeStyles","theme","header","height","backgroundColor","padding","display","flexDirection","justifyContent","largeAccordionRoot","border","borderBottom","margin","largeAccordionSummaryRoot","cursor","marginBottom","minHeight","largeAccordionSummaryContent","alignItems","firstHeaderRoot","minWidth","flexBasis","firstHeader","fontSize","typography","pxToRem","whiteSpace","fontWeight","firstHeaderSecondary","textOverflow","overflow","color","palette","grey","main","secondHeaderRoot","thirdHeaderRoot","clearButtonRoot","lighten","borderRadius","marginRight","transition","transitions","create","duration","shortest","error","deleteButton","dark","inverseDeleteButton","headerCost","costColor","success","tabsList","marginTop","tabRoot","tabsScroller","bottomAccordianContainer","position","bottom","width","inverseTextStyle","InfoPage","children","style","className","LoadingOverlay","CircularProgress","useStyles","container","icon","actionsIcon","actionsIconSmall","node","alignContent","fileTreeRoot","boxShadow","red","borderOverwriter","zIndex","background","headerHeight","right","top","testingTextRoot","dragAndDropRoot","textAlign","dragAndDropAbsolute","left","maxWidth","dragAndDropRootActive","dragAndDropRootReject","toggleButtonRoot","codeRoot","filesToTreeNodes","arr","tree","Object","values","map","obj","splitpath","path","replace","split","ptr","i","length","name","isDirectory","slice","join","objectToArr","keys","k","forEach","treeifyPaths","files","selectedFunctionName","Accordion","withStyles","root","borderLeft","borderRight","expanded","MuiAccordion","PostBodyEditor","postBody","setPostBody","classes","rootClasses","useState","attrKeys","setAttrKeys","attrValues","setAttrValues","useEffect","newObject","zipObject","clsx","curr_key","index","TextField","value","onChange","e","newVal","setNewKey","target","placeholder","setNewValue","ButtonBase","onClick","_","prev","splice","Button","variant","size","push","TestingAccordion","route","output","setOutput","toggleViewValue","setToggleViewValue","wrapOutput","setWrapOutput","waitingForResponse","setWaitingForResponse","handleGoClick","a","axios","post","funcResponse","data","JSON","stringify","Prism","plugins","NormalizeWhitespace","setDefaults","highlightAll","square","TransitionProps","mountOnEnter","AccordionSummary","expandIcon","Typography","AccordionDetails","ToggleButtonGroup","exclusive","val","ToggleButton","lineHeight","FormControlLabel","control","Checkbox","checked","label","rel","href","getLanguageFromName","fileName","pop","toLowerCase","getDefaultFilePath","input","filter","ele","sort","b","find","endsWith","DragAndDropSingleFile","uploadFileCallback","useDropzone","onDrop","filesArray","file_reader","FileReader","onload","buf","result","String","fromCharCode","apply","Uint16Array","readAsText","multiple","maxSize","getRootProps","getInputProps","isDragActive","isDragReject","loadNodeTypesFromUnpkg","monaco","moduleName","languages","typescript","typescriptDefaults","_extraLibs","get","types","addExtraLib","loadTypesFromUnpkg","fixTypeExport","firstTry","secondTry","thirdTry","fourthTry","fallback","packageName","version","depPackageRes","typesFile","module","source","startsWith","typesSourceRes","Error","typings","rawExport","REGEX_EXPORT_DEFAULT","test","DependencyMonitor","isResolving","debounceTimer","debounceDuration","REGEX_DETECT_REQUIRE","nativeModules","editor","getModel","uri","isValidFile","this","undefined","clearTimeout","setTimeout","editorVal","getValue","depNameArr","matchAll","console","log","includes","Function","setFiles","selectedFileName","setSelectedFileName","treeWidth","setTreeWidth","widthDeltaTracker","setWidthDeltaTracker","addFileDialog","setAddFileDialogOpen","isFile","setIsFile","newFilePath","setNewFilePath","newFileOrFolderName","setNewFileOrFolderName","saveDialogOpen","setSaveDialogOpen","editorWordWrap","setEditorWordWrap","editorMinimap","setEditorMinimap","editorLargeFont","setEditorLargeFont","editorRef","useRef","Container","useMonaco","infoClasses","functionsMounted","Date","current","getModels","dispose","insertFileCallback","deleteFileCallback","file","confirmedDelete","changeFileCallback","panelStyle","borderTop","overflowY","id","disableElevation","onResize","dir","ref","d","onResizeStart","enable","topRight","bottomRight","bottomLeft","topLeft","labelKey","childrenKey","valueKey","renderLabel","unfoldStatus","iconComp","React","cloneElement","getActionsData","unfoldFirst","requestChildrenData","toggleFoldStatus","actionsAlignRight","defaultLanguage","language","defaultValue","onMount","dependencyMonitor","debouncedResolveContents","onDidChangeModelContent","beforeMount","setCompilerOptions","getCompilerOptions","typeRoots","noUnusedParameters","noImplicitUseStrict","noUnusedLocals","allowJs","checkJs","noImplicitAny","noImplicitReturns","noImplicitThis","allowNonTsExtensions","moduleResolution","allowSyntheticDefaultImports","skipLibCheck","esModuleInterop","setDiagnosticsOptions","getDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","options","readOnly","minimap","scale","showSlider","enabled","wordWrap","rulers","Dialog","open","fullWidth","onClose","onEnter","DialogTitle","DialogContent","filenamify","Divider","_newTotalFileName","date","DialogActions","charAt","disabled","DialogContentText","createMuiTheme","primary","light","secondary","A400","info","default","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81a3427d.chunk.js","sourcesContent":["import CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, lighten } from '@material-ui/core/styles';\n\nexport const useInfoStyles = makeStyles(theme => ({\n    header: {\n        height: 100,\n        backgroundColor: 'white',\n        padding: '0px 16px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    largeAccordionRoot: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    largeAccordionSummaryRoot: {\n        cursor: \"default !important\",\n        marginBottom: -1,\n        minHeight: '60px !important',\n        '&$expanded': {\n            minHeight: '60px !important',\n        },\n    },\n    largeAccordionSummaryContent: {\n        '&$expanded': {\n            margin: '12px 0',\n        },\n        justifyContent: \"space-between !important\",\n        alignItems: 'center !important'\n    },\n    firstHeaderRoot: {\n        display: 'inline-flex',\n        minWidth: 0,\n        flexBasis: '25%',\n    },\n    firstHeader: {\n        fontSize: theme.typography.pxToRem(15),\n        whiteSpace: 'nowrap',\n        fontWeight: '500',\n    },\n    firstHeaderSecondary: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        color: theme.palette.grey.main,\n        fontWeight: '400',\n    },\n    secondHeaderRoot: {\n        display: 'inline-flex',\n        minWidth: 0,\n        flexBasis: '50%',\n        justifyContent: 'center'\n    },\n    thirdHeaderRoot: {\n        display: 'inline-flex',\n        minWidth: 0,\n        flexBasis: '25%',\n        justifyContent: 'flex-end'\n    },\n    clearButtonRoot: {\n        color: lighten('#757575', 0.55),\n        borderRadius: 4,\n        display: 'flex',\n        cursor: 'pointer',\n        marginRight: 8,\n        transition: theme.transitions.create(['background-color'], {\n            duration: theme.transitions.duration.shortest,\n        }),\n        '&:hover': {\n            backgroundColor: theme.palette.error.main,\n            color: '#ffffff'\n        }\n    },\n    deleteButton: {\n        backgroundColor: theme.palette.error.main,\n        color: 'white',\n        '&:hover': {\n            backgroundColor: theme.palette.error.dark,\n        }\n    },\n    inverseDeleteButton: {\n        backgroundColor: theme.palette.grey[300],\n        color: 'black',\n        '&:hover': {\n            backgroundColor: theme.palette.error.main,\n            color: 'white'\n        }\n    },\n    headerCost: {\n        fontSize: 27,\n        fontWeight: \"500\"\n    },\n    costColor: {\n        color: theme.palette.success.main,\n    },\n    tabsList: {\n        height: 37,\n        display: 'flex',\n        margin: 0,\n        marginTop: 25,\n        padding: 0,\n        justifyContent: 'center'\n    },\n    tabRoot: {\n        fontSize: '0.75rem !important',\n        minWidth: '90px !important',\n        minHeight: `${37}px !important`\n    },\n    tabsScroller: {\n        height: `${37}px !important`\n    },\n    bottomAccordianContainer: {\n        position: 'absolute',\n        bottom: 0,\n        width: 600\n    },\n    inverseTextStyle: {\n        color: \"white\",\n        backgroundColor: \"rgba(0, 0, 0, 0.95)\",\n        padding: \"3px 12px\",\n        borderRadius: \"6px 0px 6px 0px\",\n        fontWeight: 700,\n        display: \"inline-block\",\n        border: \"1px rgba(0, 0, 0, 0.95) solid\"\n    }\n}));\n\n\nexport const InfoPage = ({ children, style={} }) => {\n    return (\n        <div className=\"d-flex\">\n            <div className=\"infoPageCardRoot\" style={style}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport const LoadingOverlay = () => {\n    return (\n        <div className=\"d-flex h-100 w-100 justify-content-center align-items-center\">\n            <CircularProgress color=\"secondary\" />\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BuildIcon from '@material-ui/icons/Build';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport axios from 'axios';\nimport zipObject from 'lodash/zipObject';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useDropzone } from 'react-dropzone';\nimport { useInfoStyles } from './utils';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-powershell';\nimport \"prismjs/themes/prism-okaidia.css\";\nimport 'prismjs/plugins/normalize-whitespace/prism-normalize-whitespace';\n\nexport const pageWidth = 900;\nexport const headerHeight = 31;\n\nexport const useStyles = makeStyles(theme => ({\n    container: {\n        margin: 20\n    },\n    icon: {\n        fontSize: 18,\n        marginRight: 6\n    },\n    actionsIcon: {\n        fontSize: 18,\n    },\n    actionsIconSmall: {\n        fontSize: 16,\n    },\n    node: {\n        display: \"flex\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        whiteSpace: \"nowrap\"\n    },\n    fileTreeRoot: {\n        display: \"flex\",\n        height: \"100%\",\n        backgroundColor: \"transparent\",\n        boxShadow: \"none\",\n        '& > :first-child': {\n            width: \"100%\"\n        }\n    },\n    red: {\n        color: theme.palette.error.main\n    },\n    borderOverwriter: {\n        position: \"absolute\",\n        zIndex: 100,\n        background: \"#fafafa\",\n        height: headerHeight - 1, // one border\n        right: -2,\n        top: 0,\n        width: 3\n    },\n    testingTextRoot: {\n        width: \"100%\",\n        borderRadius: 3,\n        backgroundColor: \"rgba(0, 0, 0, 0.04)\",\n        display: \"flex\",\n        padding: 10,\n        border: '1px solid #ddd',\n        minHeight: 60,\n    },\n    dragAndDropRoot: {\n        textAlign: 'center',\n        height: 100,\n        border: '2px dashed #ddd',\n        backgroundColor: 'transparent',\n        color: '#aaa',\n        borderRadius: 6,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 4,\n        width: \"100%\",\n        overflow: \"hidden\",\n    },\n    dragAndDropAbsolute: {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        margin: \"auto\",\n        bottom: 20,\n        width: \"90% !important\",\n        maxWidth: 280\n    },\n    dragAndDropRootActive: {\n        border: '2px dashed #333',\n        color: '#333',\n    },\n    dragAndDropRootReject: {\n        border: `2px dashed ${theme.palette.error.main}`,\n        color: theme.palette.error.main,\n    },\n    toggleButtonRoot: {\n        width: 120,\n        color: 'rgba(0, 0, 0, 0.55)'\n    },\n    codeRoot: {\n        backgroundColor: '#272822',\n        padding: 15,\n        width: '100%',\n        borderRadius: '0.3em',\n    },\n}));\n\nexport interface IDrawerLeftFunctionsContext {\n    selectedFunctionName: string;\n    setSelectedFunctionName: React.Dispatch<React.SetStateAction<string>>;\n    setAllFunctionNames: React.Dispatch<React.SetStateAction<string[]>>\n}\n\nexport interface IFunctionOptions {\n    dbName: string;\n    passHash: null | string;\n    route: string;\n}\n\nexport interface IFunctionFile {\n    data?: string;\n    date?: Date;\n    language?: string;\n    isDirectory: boolean;\n    path: string;\n}\n\nexport class Node {\n    isDirectory: boolean = false;\n    name: string = '';\n    children?: Node[];\n    path: string;\n};\n\nfunction filesToTreeNodes(arr: Record<string, IFunctionFile>): Node[] {\n    var tree = {}\n    function addnode(obj: IFunctionFile) {\n        var splitpath = obj.path.replace(/^\\/|\\/$/g, \"\").split('/');\n        var ptr = tree;\n        for (let i = 0; i < splitpath.length; i++) {\n            let node: Node = {\n                name: splitpath[i],\n                isDirectory: true,\n                path: splitpath.slice(0, i + 1).join(\"/\")\n            };\n            if (i == splitpath.length - 1 && !obj.isDirectory) {\n                node.isDirectory = false\n            }\n            ptr[splitpath[i]] = ptr[splitpath[i]] || node;\n            ptr[splitpath[i]].children = ptr[splitpath[i]].children || {};\n            ptr = ptr[splitpath[i]].children;\n        }\n    }\n    function objectToArr(node: any) {\n        Object.keys(node || {}).map((k) => {\n            if (node[k].children) {\n                objectToArr(node[k])\n            }\n        })\n        if (node.children) {\n            node.children = Object.values(node.children)\n            node.children.forEach(objectToArr)\n        }\n    }\n    Object.values(arr).map(addnode);\n    objectToArr(tree)\n    return Object.values(tree)\n}\n\nexport function treeifyPaths(files: Record<string, IFunctionFile>, selectedFunctionName: string): Node {\n    try {\n        const res: Node = {\n            name: selectedFunctionName,\n            isDirectory: true,\n            children: filesToTreeNodes(files),\n            path: \"/\"\n        }\n        return res;\n    } catch (error) {\n        return {} as any;\n    }\n\n}\n\nexport function renderLabel(data: any, unfoldStatus: boolean, classes: Record<string, any>): string | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any>)> {\n    const { name, isDirectory }: Node = data;\n\n    let iconComp = null;\n    if (isDirectory) {\n        iconComp = unfoldStatus ? <FolderOpenIcon /> : <FolderIcon />;\n    } else {\n        if (name.startsWith(\".\") || name.includes(\"config\")) {\n            iconComp = <SettingsIcon />;\n        } else if (name.endsWith(\".js\")) {\n            iconComp = <DescriptionIcon />;\n        } else {\n            iconComp = <InsertDriveFileIcon />;\n        }\n    }\n    return (\n        <Typography variant=\"caption\" className={classes.node}>\n            {React.cloneElement(iconComp, { className: classes.icon })}\n            {name}\n        </Typography>\n    );\n}\n\nexport function getActionsData(data: any, _: number[], unfoldStatus: boolean, classes: Record<string, string>, insertFileCallback: (_: string) => void, deleteFileCallback: (_: string) => void, selectedFileName: string) {\n    const { isDirectory, path }: Node = data;\n    if (isDirectory) {\n        if (!unfoldStatus) {\n            if (path !== \"/\") {\n                return {\n                    icon: <ClearIcon className={clsx(classes.actionsIconSmall, classes.red)} />,\n                    onClick: () => deleteFileCallback(path + \"/\")\n                }\n            } else return null;\n        }\n        return {\n            icon: <AddIcon className={classes.actionsIcon} />,\n            label: <Typography style={{ fontSize: 11, lineHeight: 1 }}>new</Typography>,\n            onClick: () => insertFileCallback(path)\n        };\n    } else if (selectedFileName === path) {\n        return {\n            icon: <ClearIcon className={clsx(classes.actionsIconSmall, classes.red)} />,\n            onClick: () => deleteFileCallback(path)\n        }\n    }\n}\n\nexport function requestChildrenData(data: any, _: number[], toggleFoldStatus: () => void, changeFileCallback: (path: string) => void) {\n    const { isDirectory, path }: Node = data;\n    if (isDirectory) {\n        toggleFoldStatus();\n    } else {\n        changeFileCallback(path);\n    }\n}\n\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid #ddd',\n        borderLeft: \"none\",\n        borderRight: \"none\",\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: '1px solid #ddd !important',\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 'auto',\n        },\n    },\n    expanded: {},\n})(MuiAccordion);\n\nfunction PostBodyEditor({ postBody, setPostBody }: { postBody: Record<string, string>, setPostBody: React.Dispatch<React.SetStateAction<Record<string, string>>> }) {\n    const classes: any = useInfoStyles();\n    const rootClasses: any = useStyles();\n    const [attrKeys, setAttrKeys] = useState<string[]>([]);\n    const [attrValues, setAttrValues] = useState<string[]>([]);\n\n    const setNewKey = (index: number, newVal: string) => {\n        attrKeys[index] = newVal;\n        setAttrKeys([...attrKeys]);\n    }\n\n    const setNewValue = (index: number, newVal: string) => {\n        attrValues[index] = newVal;\n        setAttrValues([...attrValues]);\n    }\n\n    useEffect(() => {\n        const newObject = zipObject(attrKeys, attrValues);\n        delete newObject[\"\"];\n        setPostBody(newObject);\n    }, [attrValues, attrKeys]);\n\n    return (\n        <div className={clsx(\"flex-column\", \"align-items-center\", attrKeys.length > 0 && \"py-4\", rootClasses.testingTextRoot)}>\n            {attrKeys.map((curr_key, index) =>\n                <div className=\"d-flex mb-4\" key={\"\" + index}>\n                    <span style={{ width: 50 }}></span>\n                    <TextField\n                        value={curr_key}\n                        onChange={e => setNewKey(index, e.target.value)}\n                        placeholder=\"Key\"\n                        className=\"mx-2\"\n                    />\n                    <TextField\n                        value={attrValues[index]}\n                        onChange={e => setNewValue(index, e.target.value)}\n                        placeholder=\"Value\"\n                        className=\"ml-2\"\n                    />\n                    <span className=\"d-flex align-items-end justify-content-end\" style={{ width: 50 }}>\n                        <ButtonBase\n                            onClick={_ => {\n                                setAttrKeys(prev => {\n                                    prev.splice(index, 1);\n                                    return [...prev]\n                                });\n                                setAttrValues(prev => {\n                                    prev.splice(index, 1);\n                                    return [...prev]\n                                })\n                            }}\n                            className={`${classes.clearButtonRoot} align-items-center`}\n                        >\n                            <ClearIcon fontSize={'small'} style={{ color: \"inherit\" }} />\n                        </ButtonBase>\n                    </span>\n                </div>\n            )}\n            <div className=\"d-flex justify-content-center pt-2\">\n                <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    className=\"mr-2\"\n                    onClick={e => {\n                        setAttrKeys(prev => {\n                            prev.push(\"\");\n                            return [...prev]\n                        });\n                        setAttrValues(prev => {\n                            prev.push(\"\");\n                            return [...prev]\n                        })\n                    }}\n                >\n                    Add Row\n</Button>\n            </div>\n\n        </div>\n    )\n}\n\nexport const TestingAccordion = ({ route }: { route: string }) => {\n    const classes = useStyles();\n    const [output, setOutput] = useState<string>(\"\");\n    const [postBody, setPostBody] = useState<Record<string, string>>({});\n    const [toggleViewValue, setToggleViewValue] = useState<number>(1);\n    const [wrapOutput, setWrapOutput] = useState<boolean>(false);\n    const [waitingForResponse, setWaitingForResponse] = useState<boolean>(false);\n\n    const handleGoClick = async () => {\n        setWaitingForResponse(true)\n        const funcResponse = await axios.post(`https://api.easybase.io/testFunction`, postBody);\n        setWaitingForResponse(false);\n        setOutput(typeof funcResponse.data === \"object\" ? JSON.stringify(funcResponse.data) : funcResponse.data);\n    }\n\n    useEffect(() => {\n        if (toggleViewValue === 2) {\n            Prism.plugins.NormalizeWhitespace.setDefaults({\n                'remove-trailing': true,\n                'remove-indent': true,\n                'left-trim': true,\n                'right-trim': true,\n            });\n            Prism.highlightAll();\n        }\n    }, [toggleViewValue]);\n\n    return (\n        <Accordion square TransitionProps={{ mountOnEnter: true }}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"h6\" className=\"d-flex align-items-center\"><BuildIcon className=\"mr-1 pr-1\" />Deploy</Typography>\n            </AccordionSummary>\n            <AccordionDetails className=\"d-flex align-items-center flex-column mx-5 mb-4\">\n                <div className=\"align-items-center d-flex mb-3\">\n                    <ToggleButtonGroup value={toggleViewValue} exclusive onChange={(_, val) => setToggleViewValue(val)} size=\"small\">\n                        <ToggleButton value={1} classes={{ root: classes.toggleButtonRoot }}>\n                            <Typography variant=\"button\" style={{ lineHeight: 1.45 }}>Testing</Typography>\n                        </ToggleButton>\n                        <ToggleButton value={2} classes={{ root: classes.toggleButtonRoot }}>\n                            <Typography variant=\"button\" style={{ lineHeight: 1.45 }}>Deploy</Typography>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n\n                {toggleViewValue === 1 &&\n                    <>\n                        <Typography variant=\"h6\" className=\"w-100 mb-1\">Input:</Typography>\n                        <PostBodyEditor postBody={postBody} setPostBody={setPostBody} />\n                        <Typography variant=\"h6\" className=\"w-100 mt-5 mb-1\">Output:</Typography>\n                        <pre className={clsx(classes.testingTextRoot, \"mb-0\")} style={wrapOutput ? { whiteSpace: \"normal\" } : {}}>\n                            {waitingForResponse ? \n                                <div className=\"d-flex w-100 justify-content-center align-items-center\">\n                                    <CircularProgress color=\"secondary\" size={30} />\n                                </div>\n                            :\n                                <code>{output}</code>\n                            }\n                        </pre>\n                        <FormControlLabel\n                            className=\"w-100 justify-content-end\"\n                            control={\n                                <Checkbox\n                                    checked={wrapOutput}\n                                    onChange={(_, val) => setWrapOutput(val)}\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                />\n                            }\n                            label={<Typography variant=\"body2\" style={{ color: \"rgba(0, 0, 0, 0.55)\" }}>Wrap output</Typography>}\n                        />\n                        <div className=\"d-flex justify-content-end align-items-center w-100 mt-5\">\n                            <Button variant=\"contained\" onClick={handleGoClick} style={{ backgroundColor: '#00C851', color: 'white' }}>\n                                Go\n                            </Button>\n                        </div>\n                    </>\n                }\n\n                {toggleViewValue === 2 &&\n                    <>\n                        <Typography variant=\"h6\" className=\"w-100 mt-2\">React &amp; React Native · <a target=\"_blank\" rel=\"noreferrer\" href=\"https://easybase.io/react/#cloud-functions\">Read more</a></Typography>\n                        <pre className={classes.codeRoot}>\n                            <code className=\"language-jsx\">{`\n                                import { useEasybase, callFunction } from 'easybase-react';\n\n                                export default function() {\n                                    async function handleButtonClick() {\n                                        const response = await callFunction('${route.slice(1)}', {\n                                            hello: \"world\",\n                                            message: \"Find me in event.body\"\n                                        });\n\n                                        console.log(\"Cloud function: \" + response);\n                                    }\n\n                                    //...\n                                }\n                            `}</code>\n                        </pre>\n\n                        <Typography variant=\"h6\" className=\"w-100 mt-4\">Request (curl) · <a target=\"_blank\" rel=\"noreferrer\" href={`https://hoppscotch.io/?method=POST&url=https://api.easybase.io&path=/function${route}&contentType=application/json&bodyParams=%5B%7B\"key\":\"hello\",\"value\":\"world\",\"active\":true%7D%5D`}>Try the live API builder</a></Typography>\n                        <pre className={classes.codeRoot}>\n                            <code className=\"language-powershell\">{`curl -X POST -H 'Content-Type: application/json' -d '{\"hello\":\"world\"}' 'https://api.easybase.io/function${route}'`}</code>\n                        </pre>\n                    </>\n                }\n\n\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nexport function getLanguageFromName(fileName: string): string {\n    switch (fileName.split(\".\").pop()?.toLowerCase()) {\n        case \"json\":\n            return \"json\";\n        case \"ts\":\n        case \"js\":\n        case \"mjs\":\n            return \"typescript\";\n        case \"css\":\n            return \"css\";\n        case \"md\":\n        case \"markdown\":\n            return \"markdown\";\n        case \"xml\":\n            return \"xml\";\n        default:\n            return \"\";\n    }\n}\n\nexport const getDefaultFilePath = (input: Record<string, IFunctionFile>): string => Object.keys(input!).filter(ele => !input![ele].isDirectory).sort((a, b) => a.length - b.length).find(ele => ele.endsWith(\".js\") || ele.endsWith(\".ts\")) || \"\";\n\n// https://stackoverflow.com/questions/6965107/converting-between-strings-and-arraybuffers\nfunction ab2str(buf: ArrayBuffer) {\n    return String.fromCharCode.apply(null, new Uint16Array(buf) as any);\n}\n\nexport function DragAndDropSingleFile({ uploadFileCallback }: { uploadFileCallback: (fileName: string, data: string) => void }): React.ReactElement {\n    const classes = useStyles();\n\n    const handleFileDrop = (filesArray: File[]) => {\n        const file_reader = new FileReader();\n\n        file_reader.onload = (e) => {\n            uploadFileCallback(filesArray[0].name, typeof e.target?.result === \"string\" ? e.target?.result : ab2str(e.target!.result as ArrayBuffer))\n        }\n\n        filesArray.length && file_reader.readAsText(filesArray[0]);\n    };\n\n    const { getRootProps, getInputProps, isDragActive, isDragReject } = useDropzone({ onDrop: handleFileDrop, multiple: false, maxSize: 3e9 /** 3 GBs */ });\n\n    return (\n        <div className=\"d-flex justify-content-center w-100 mb-3\">\n            <div {...getRootProps()} className={clsx(classes.dragAndDropRoot, isDragActive && classes.dragAndDropRootActive, (isDragActive && isDragReject) && classes.dragAndDropRootReject)}>\n                <input {...getInputProps()} />\n                <Typography variant=\"body2\" className=\"m-0\">Drop a file here</Typography>\n            </div>\n        </div>\n    )\n}\n\nexport const DefaultFunctionPlaceholder = () => {\n    return (\n        <div className=\"d-flex justify-content-center align-items-center flex-column mt-5\">\n            <Fab style={{ backgroundColor: '#CACACA', boxShadow: 'none', pointerEvents: 'none' }} size={\"medium\"} >\n                <AddIcon style={{ color: 'white' }} />\n            </Fab>\n            <Typography variant=\"h6\" style={{ color: '#CACACA', marginTop: 20 }}>Create a new function or select an existing one in the left-hand drawer</Typography>\n        </div>\n    )\n}\n\nexport function sanitizeSemvarModule(importPath: string): string {\n    // Format is: possibly '@types/' + 'moduleName@V.V.V-alpha' + '...rest'\n    const noLeadingFolder = importPath.replace(\"@types/\", \"\");\n    const dirtyModuleName = noLeadingFolder.split(\"/\").shift();\n    const cleanModuleName = dirtyModuleName?.split(\"@\").shift();\n    if (cleanModuleName) {\n        return cleanModuleName + importPath.split(dirtyModuleName!).pop();\n    } else {\n        return \"\";\n    }\n}\n\nexport async function loadNodeTypesFromUnpkg(monaco: any, moduleName: string) {\n    if (`file:///node_modules/@types/${moduleName}/index.d.ts` in monaco.languages.typescript.typescriptDefaults._extraLibs) {\n        return;\n    }\n    const types = await axios.get(`https://unpkg.com/@types/node/${moduleName}.d.ts`);\n    monaco.languages.typescript.typescriptDefaults.addExtraLib(types.data, `file:///node_modules/@types/${moduleName}/index.d.ts`);\n}\n\nasync function loadTypesFromUnpkg(monaco: any, moduleName: string) {\n    // Trying in this order:\n    // 1. Use @types unpkg\n    // 2. Using regular package.json types or typings (Only difference is remove @types from unpkg url)\n    // 3. Just look for index.d.ts in unpkg\n    // 4. Import main module\n\n    function fixTypeExport(rawExport: string): string {\n        // https://github.com/manferlo81/rollup-plugin-export-equals/blob/master/src/index.ts\n        const REGEX_EXPORT_EQUALS = /(\\b)export(\\s*)=/gm;\n        const REGEX_EXPORT_DEFAULT = /(\\b)export(\\s\\s*)default(\\s\\s*)(.*)/gm;\n        if (REGEX_EXPORT_EQUALS.test(rawExport)) {\n            return rawExport;\n        } else if (REGEX_EXPORT_DEFAULT.test(rawExport)) {\n            const replace = 'export = $4';\n            return rawExport.replace(REGEX_EXPORT_DEFAULT, replace);\n        } else {\n            return `declare module \"${moduleName}\" { declare const _a: any; export = _a; }`;\n        }\n    }\n\n\n    async function firstTry(packageName: string, version?: string): Promise<boolean> {\n        try {\n            const depPackageRes = await axios.get(`https://unpkg.com/@types/${packageName}${version ? `@${version}` : ''}/package.json`);\n            let typesFile: string = depPackageRes.data.typings || depPackageRes.data.types || \"\";\n            typesFile = typesFile.startsWith('./') ? typesFile.slice(2) : typesFile;\n            if (typesFile) {\n                const typesSourceRes = await axios.get(`https://unpkg.com/@types/${packageName}${version ? `@${version}` : ''}/${typesFile}`);\n                // TODO: handle multiple type files\n                monaco.languages.typescript.typescriptDefaults.addExtraLib(fixTypeExport(typesSourceRes.data), `file:///node_modules/@types/${packageName}/index.d.ts`);\n                return true;\n            } else {\n                throw new Error(\"No types file\");\n            }\n        } catch (err) {\n            return false;\n        }\n    }\n\n    async function secondTry(packageName: string, version?: string): Promise<boolean> {\n        try {\n            const depPackageRes = await axios.get(`https://unpkg.com/${packageName}${version ? `@${version}` : ''}/package.json`);\n            let typesFile: string = depPackageRes.data.typings || depPackageRes.data.types || \"\";\n            typesFile = typesFile.startsWith('./') ? typesFile.slice(2) : typesFile;\n            if (typesFile) {\n                const typesSourceRes = await axios.get(`https://unpkg.com/${packageName}${version ? `@${version}` : ''}/${typesFile}`);\n                // TODO: handle multiple type files\n                monaco.languages.typescript.typescriptDefaults.addExtraLib(fixTypeExport(typesSourceRes.data), `file:///node_modules/@types/${packageName}/index.d.ts`);\n                return true;\n            } else {\n                throw new Error(\"No types file\");\n            }\n        } catch (err) {\n            return false;\n        }\n    }\n\n    async function thirdTry(packageName: string, version?: string): Promise<boolean> {\n        try {\n            const depPackageRes = await axios.get(`https://unpkg.com/${packageName}${version ? `@${version}` : ''}/index.d.ts`);\n            let typesFile: string = depPackageRes.data.typings || depPackageRes.data.types || \"\";\n            typesFile = typesFile.startsWith('./') ? typesFile.slice(2) : typesFile;\n            if (typesFile) {\n                const typesSourceRes = await axios.get(`https://unpkg.com/${packageName}${version ? `@${version}` : ''}/${typesFile}`);\n                // TODO: handle multiple type files\n                monaco.languages.typescript.typescriptDefaults.addExtraLib(fixTypeExport(typesSourceRes.data), `file:///node_modules/@types/${packageName}/index.d.ts`);\n                return true;\n            } else {\n                throw new Error(\"No types file\");\n            }\n        } catch (err) {\n            return false;\n        }\n    }\n\n    async function fourthTry(packageName: string, version?: string): Promise<boolean> {\n        try {\n            const depPackageRes = await axios.get(`https://unpkg.com/${packageName}${version ? `@${version}` : ''}/package.json`);\n            let typesFile: string = depPackageRes.data.main || depPackageRes.data.module || depPackageRes.data.source || \"\";\n            typesFile = typesFile.startsWith('./') ? typesFile.slice(2) : typesFile;\n            if (typesFile) {\n                const typesSourceRes = await axios.get(`https://unpkg.com/${packageName}${version ? `@${version}` : ''}/${typesFile}`);\n                // TODO: handle multiple type files\n                monaco.languages.typescript.typescriptDefaults.addExtraLib(fixTypeExport(typesSourceRes.data), `file:///node_modules/@types/${packageName}/index.d.ts`);\n                return true;\n            } else {\n                throw new Error(\"No types file\");\n            }\n        } catch (err) {\n            return false;\n        }\n    }\n\n    function fallback(packageName: string, version?: string): boolean {\n        monaco.languages.typescript.typescriptDefaults.addExtraLib(`declare module \"${packageName}\" { declare const _a: any; export = _a; }`, `file:///node_modules/@types/${packageName}/index.d.ts`);\n        return true;\n    }\n\n    if (`file:///node_modules/@types/${moduleName}/index.d.ts` in monaco.languages.typescript.typescriptDefaults._extraLibs) {\n        return;\n    }\n    // version = (version as string).replace(\"^\", \"\");\n    fallback(moduleName);\n    (await firstTry(moduleName)) || (await secondTry(moduleName)) || (await thirdTry(moduleName)) || (await fourthTry(moduleName))\n}\n\nexport class DependencyMonitor {\n    private isResolving?: boolean;\n    private debounceTimer?: number;\n    private debounceDuration: number = 4000;\n    private REGEX_DETECT_REQUIRE = /(?:(?:\\\\['\"`][\\s\\S])*?(['\"`](?=[\\s\\S]*?require\\s*\\(['\"`][^`\"']+?[`'\"]\\)))(?:\\\\\\1|[\\s\\S])*?\\1|\\s*(?:(?:var|const|let)?\\s*([_.\\w/$]+?)\\s*=\\s*)?require\\s*\\(([`'\"])((?:@([^/]+?)\\/([^/]*?)|[-.@\\w/$]+?))\\3(?:, ([`'\"])([^\\7]+?)\\7)?\\);?)/g; // https://github.com/jonschlinkert/requires-regex/blob/master/index.js\n    private nativeModules: string[] = [\"assert\", \"async_hooks\", \"base\", \"buffer\", \"child_process\", \"cluster\", \"console\", \"constants\", \"crypto\", \"dgram\", \"dns\", \"domain\", \"events\", \"fs\", \"globals\", \"globals.global\", \"http\", \"http2\", \"https\", \"inspector\", \"module\", \"net\", \"os\", \"path\", \"perf_hooks\", \"process\", \"punycode\", \"querystring\", \"readline\", \"repl\", \"stream\", \"string_decoder\", \"timers\", \"tls\", \"trace_events\", \"tty\", \"url\", \"util\", \"v8\", \"vm\", \"wasi\", \"worker_threads\", \"zlib\"];\n\n    debouncedResolveContents(editor: any, monaco: any) {\n        const fileName: string = editor.getModel().uri.path.split(\"/\").pop();\n        const isValidFile: boolean = fileName.endsWith(\"js\") || fileName.endsWith(\"ts\");\n        if (this.isResolving || !isValidFile) {\n            return;\n        }\n\n        if (this.debounceTimer !== undefined) {\n            clearTimeout(this.debounceTimer);\n        }\n        this.debounceTimer = setTimeout(async () => {\n            this.isResolving = true;\n\n            // GO\n            const editorVal = editor.getValue();\n            const depNameArr = [...editorVal.matchAll(this.REGEX_DETECT_REQUIRE)].map(ele => ele[4]).filter((ele: string) => !!ele && !ele.startsWith(\".\") && !ele.startsWith(\"/\"));\n            console.log(\"Dependencies to load: \", depNameArr);\n            for (const moduleName of depNameArr) {\n                if (this.nativeModules.includes(moduleName)) {\n                    loadNodeTypesFromUnpkg(monaco, moduleName);\n                } else {\n                    loadTypesFromUnpkg(monaco, moduleName);\n                }\n            }\n\n            this.isResolving = false;\n            this.debounceTimer = undefined;\n        }, this.debounceDuration) as any;\n    }\n}\n","import React, { useEffect, useContext, useState, useRef } from 'react';\nimport { InfoPage, LoadingOverlay, useInfoStyles } from './utils';\nimport * as Container from './Functions-container';\nimport Editor, { useMonaco } from \"@monaco-editor/react\";\nimport Tree from \"material-ui-tree\";\nimport { Resizable } from 're-resizable';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport filenamify from 'filenamify';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function Function() {\n    const [files, setFiles] = useState<Record<string, Container.IFunctionFile>>();\n    const [selectedFileName, setSelectedFileName] = useState<string>(\"\");\n    const [treeWidth, setTreeWidth] = useState<number>(250);\n    const [widthDeltaTracker, setWidthDeltaTracker] = useState<number>();\n    const [addFileDialog, setAddFileDialogOpen] = useState<boolean>(false);\n    const [isFile, setIsFile] = useState<boolean | undefined>(undefined); // false means it's a folder\n    const [newFilePath, setNewFilePath] = useState<string>(\"\");\n    const [newFileOrFolderName, setNewFileOrFolderName] = useState<string>(\"\");\n    const [saveDialogOpen, setSaveDialogOpen] = useState<boolean>(false);\n\n    const [editorWordWrap, setEditorWordWrap] = useState<boolean>(true);\n    const [editorMinimap, setEditorMinimap] = useState<boolean>(true);\n    const [editorLargeFont, setEditorLargeFont] = useState<boolean>(false);\n\n    const editorRef = useRef<any>(null);\n    const classes = Container.useStyles();\n    const monaco = useMonaco();\n\n    const infoClasses: any = useInfoStyles();\n\n    const selectedFunctionName = \"MyFunction\";\n\n    const functionsMounted = async () => {\n        setSelectedFileName(\"src/handler.js\");\n        setFiles({\n            \"package.json\": {\n                \"data\": \"{\\n    \\\"name\\\": \\\"easybase-function\\\",\\n    \\\"version\\\": \\\"1.0.0\\\",\\n    \\\"description\\\": \\\"Easybase Function\\\",\\n    \\\"main\\\": \\\"src/handler.js\\\",\\n    \\\"keywords\\\": [],\\n    \\\"dependencies\\\": {\\n      \\\"figlet\\\": \\\"^1.5.0\\\"\\n    }\\n}\\n\\n\",\n                \"date\": new Date(),\n                \"language\": \"json\",\n                \"isDirectory\": false,\n                \"path\": \"package.json\"\n            },\n            \"src/\": {\n                \"isDirectory\": true,\n                \"path\": \"src/\"\n            },\n            \"src/handler.js\": {\n                \"data\": \"var figlet = require('figlet');\\n\\nmodule.exports = async (event, context) => {\\n  const textToFig = event.body.message || \\\"Send me some text!\\\";\\n  const figOptions = event.body.options || \\\"{}\\\";\\n\\n  try {\\n    const figResult = figlet.textSync(textToFig, JSON.parse(figOptions))\\n    return context.succeed(figResult);\\n  } catch (error) {\\n    return context.fail(error);\\n  }\\n}\\n\",\n                \"date\": new Date(),\n                \"language\": \"typescript\",\n                \"isDirectory\": false,\n                \"path\": \"src/handler.js\"\n            }\n        });\n    }\n\n    useEffect(() => {\n        functionsMounted();\n    }, []);\n\n    useEffect(() => {\n        if (files === undefined && editorRef.current && monaco) {\n            monaco.editor.getModels().forEach((ele: any) => ele.dispose());\n            console.log(monaco.editor.getModels());\n        }\n    }, [files])\n\n    const onDialogEnter = () => {\n        setIsFile(undefined);\n        setNewFileOrFolderName(\"\");\n    }\n\n    const insertFileCallback = (path: string) => {\n        setNewFilePath(path === \"/\" ? \"\" : path + \"/\");\n        setAddFileDialogOpen(true);\n    }\n\n    const handleDialogSave = () => {\n        let _newTotalFileName = newFilePath + newFileOrFolderName;\n        if (!isFile && _newTotalFileName.charAt(_newTotalFileName.length - 1) !== \"/\") {\n            _newTotalFileName += \"/\";\n        }\n\n        if (Object.keys(files!).includes(_newTotalFileName)) {\n        } else {\n            if (isFile) {\n                setFiles(prev => ({\n                    [_newTotalFileName]: {\n                        language: Container.getLanguageFromName(newFileOrFolderName),\n                        data: \"\",\n                        date: new Date(),\n                        isDirectory: false,\n                        path: _newTotalFileName\n                    },\n                    ...prev\n                }));\n            } else {\n                setFiles(prev => ({\n                    [_newTotalFileName]: {\n                        isDirectory: true,\n                        path: _newTotalFileName\n                    },\n                    ...prev\n                }));\n            }\n        }\n\n        setAddFileDialogOpen(false);\n    }\n\n    const deleteFileCallback = async (path: string) => {\n        const confirmedDelete = () => {\n            if (path !== \"//\") {\n                const deletedFile = files![path];\n                if (deletedFile.isDirectory) {\n                    setFiles(prev => {\n                        for (const file of Object.keys(prev!)) {\n                            if (file.startsWith(path)) {\n                                delete prev![file];\n                            }\n                        }\n                        setSelectedFileName(Container.getDefaultFilePath(prev!));\n                        return { ...prev };\n                    })\n                } else {\n                    setFiles(prev => {\n                        delete prev![path];\n                        setSelectedFileName(Container.getDefaultFilePath(prev!));\n                        return { ...prev };\n                    })\n                }\n            }\n        }\n\n        confirmedDelete();\n    }\n\n    const _newCurrentFunctionFile = (): Container.IFunctionFile => ({ ...files![selectedFileName], data: editorRef.current.getValue() })\n\n    const changeFileCallback = (path: string) => {\n        if (selectedFileName !== \"\") {\n            setFiles(prev => ({\n                ...prev,\n                [selectedFileName]: _newCurrentFunctionFile()\n            }));\n        }\n        setSelectedFileName(path);\n    }\n\n    function uploadDirectFile(fileName: string, data: string) {\n        let _newTotalFileName = newFilePath + fileName;\n\n        if (Object.keys(files!).includes(_newTotalFileName)) {\n        } else {\n            setFiles(prev => ({\n                [_newTotalFileName]: {\n                    language: Container.getLanguageFromName(fileName),\n                    data: data,\n                    date: new Date(),\n                    isDirectory: false,\n                    path: _newTotalFileName\n                },\n                ...prev\n            }));\n        }\n\n        setAddFileDialogOpen(false);\n    }\n\n    const onMonacoMount = (editor: any, monaco: any) => {\n        editorRef.current = editor;\n\n        const dependencyMonitor = new Container.DependencyMonitor();\n        dependencyMonitor.debouncedResolveContents(editor, monaco)\n        editor.onDidChangeModelContent((_: any) => {\n            dependencyMonitor.debouncedResolveContents(editor, monaco)\n        });\n        // TODO: typescript `module is undefined. Type npm i @types/node`\n    }\n\n    const onBeforeMonacoMount = (monaco: any) => {\n        monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n            ...monaco.languages.typescript.typescriptDefaults.getCompilerOptions(),\n            typeRoots: [\"file:///node_modules/@types\"],\n            noUnusedParameters: false,\n            noImplicitUseStrict: true,\n            noUnusedLocals: true,\n            allowJs: true,\n            checkJs: true,\n            noImplicitAny: false,\n            noImplicitReturns: false,\n            noImplicitThis: false,\n            target: 2,\n            allowNonTsExtensions: true,\n            moduleResolution: 2,\n            module: 1,\n            allowSyntheticDefaultImports: true,\n            skipLibCheck: true,\n            esModuleInterop: true\n        });\n\n        monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n            ...monaco.languages.typescript.typescriptDefaults.getDiagnosticsOptions(),\n            noSemanticValidation: false,\n            noSyntaxValidation: false\n        });\n\n    }\n\n    const panelStyle = {\n        borderLeft: \"none\",\n        borderTop: \"none\",\n        borderRight: \"solid 1px #ddd\",\n        borderBottom: \"solid 1px #ddd\",\n        background: \"#fafafa\"\n    }\n\n    if (!files) return <InfoPage style={{ width: \"100vw\" }}><div className=\"mt-5\"><LoadingOverlay /></div></InfoPage>;\n    else return (\n        <InfoPage style={{ width: \"100vw\", overflowY: \"hidden\" }}>\n            <div className={infoClasses.header}>\n                <div style={{ height: 17 }}></div>\n                <div className=\"d-flex align-items-center justify-content-between\">\n                    <Typography variant=\"h4\"><b>{selectedFunctionName}</b></Typography>\n                    <div className=\"d-flex align-items-center\">\n                        <Button id=\"function-save-button\" onClick={() => setSaveDialogOpen(true)} variant=\"contained\" disableElevation color=\"primary\">Save</Button>\n                    </div>\n                </div>\n                <div style={{ height: 17 }}></div>\n            </div>\n            <Container.TestingAccordion route=\"/YOUR-ROUTE-HERE\" />\n            <div className=\"d-flex\">\n                <Resizable\n                    size={{ width: treeWidth, height: \"auto\" }}\n                    onResize={(e, dir, ref, d) => setTreeWidth(widthDeltaTracker! + d.width)}\n                    onResizeStart={_ => setWidthDeltaTracker(treeWidth)}\n                    minHeight=\"400px\"\n                    maxWidth={Container.pageWidth}\n                    minWidth={0}\n                    style={panelStyle}\n                    enable={{ top: false, right: true, bottom: false, left: false, topRight: false, bottomRight: false, bottomLeft: false, topLeft: false }}\n                >\n                    <Tree\n                        data={Container.treeifyPaths(files, selectedFunctionName) as any}\n                        labelKey=\"name\"\n                        childrenKey=\"children\"\n                        valueKey=\"path\"\n                        renderLabel={(data, unfoldStatus) => Container.renderLabel(data, unfoldStatus, classes)}\n                        getActionsData={(data, path, unfoldStatus): any => Container.getActionsData(data, path, unfoldStatus, classes, insertFileCallback, deleteFileCallback, selectedFileName)}\n                        unfoldFirst\n                        className={classes.fileTreeRoot}\n                        requestChildrenData={(data, path, toggleFoldStatus) => Container.requestChildrenData(data, path, toggleFoldStatus, changeFileCallback)}\n                        actionsAlignRight\n                    />\n                    <div className={classes.borderOverwriter}></div>\n                    <div className={classes.borderOverwriter} style={{ bottom: -1, top: \"inherit\" }}></div>\n                </Resizable>\n                <div style={{ width: `calc(100vw - ${treeWidth}px)`, maxWidth: `calc(100vw - ${treeWidth}px)` }}>\n                    <div className=\"d-flex align-items-center justify-content-center\" style={{ ...panelStyle, height: Container.headerHeight, borderRight: \"none !important\" }}>\n                        <Typography variant=\"subtitle2\">{selectedFileName || \"No file selected\"}</Typography>\n                    </div>\n                    <Editor\n                        height={`calc(100vh - ${Container.headerHeight * 2}px)`}\n                        defaultLanguage={files[selectedFileName]?.language}\n                        defaultValue={selectedFileName !== \"\" ? files[selectedFileName]?.data : \"\"}\n                        onMount={onMonacoMount}\n                        beforeMount={onBeforeMonacoMount}\n                        path={selectedFileName !== \"\" ? selectedFunctionName + \"/\" + selectedFileName : undefined}\n                        options={{\n                            readOnly: selectedFileName === \"\",\n                            minimap: { scale: 0.75, showSlider: \"mouseover\", enabled: editorMinimap },\n                            padding: { top: 10 },\n                            wordWrap: editorWordWrap ? \"on\" : \"off\",\n                            rulers: [],\n                            fontSize: editorLargeFont ? \"15\" : \"12\"\n                        }}\n                    />\n                    <div className=\"d-flex align-items-center justify-content-around\" style={{ ...panelStyle, height: Container.headerHeight, borderRight: \"none !important\", borderTop: \"solid 1px #ddd\" }}>\n                        <FormControlLabel\n                            control={<Checkbox size=\"small\" color=\"secondary\" checked={editorWordWrap} onChange={(_, val) => setEditorWordWrap(val)} />}\n                            label={<Typography variant=\"body2\" style={{ color: \"rgba(0, 0, 0, 0.55)\" }}>Word Wrap</Typography>}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox size=\"small\" color=\"secondary\" checked={editorMinimap} onChange={(_, val) => setEditorMinimap(val)} />}\n                            label={<Typography variant=\"body2\" style={{ color: \"rgba(0, 0, 0, 0.55)\" }}>Minimap</Typography>}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox size=\"small\" color=\"secondary\" checked={editorLargeFont} onChange={(_, val) => setEditorLargeFont(val)} />}\n                            label={<Typography variant=\"body2\" style={{ color: \"rgba(0, 0, 0, 0.55)\" }}>Large Font</Typography>}\n                        />\n                    </div>\n                </div>\n            </div>\n            <Dialog open={addFileDialog} fullWidth onClose={_ => setAddFileDialogOpen(false)} onEnter={onDialogEnter}>\n                <DialogTitle>File/Folder Details</DialogTitle>\n                <DialogContent className=\"d-flex flex-column\">\n                    <div className=\"d-flex flex-column align-items-center\">\n                        <TextField style={{ width: 250, marginBottom: 30, marginTop: 20 }} value={newFileOrFolderName} onChange={e => setNewFileOrFolderName(filenamify(e.target.value))} placeholder=\"Name\" />\n                        <ToggleButtonGroup value={isFile} exclusive onChange={(_, val) => setIsFile(val)} size=\"small\">\n                            <ToggleButton value={false} style={{ width: 125 }}>\n                                <FolderIcon className=\"mr-2\" /> Folder\n                            </ToggleButton>\n                            <ToggleButton value={true} style={{ width: 125 }}>\n                                <DescriptionIcon className=\"mr-2\" /> File\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </div>\n                    <Divider className=\"my-5 mx-5\" />\n                    <Typography variant=\"body1\" className=\"mb-2\" style={{ color: \"rgba(0, 0, 0, 0.7)\" }}>Or, you can upload directly</Typography>\n                    <Container.DragAndDropSingleFile uploadFileCallback={uploadDirectFile} />\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" onClick={_ => setAddFileDialogOpen(false)} disableElevation>Cancel</Button>\n                    <Button color=\"primary\" variant=\"contained\" onClick={handleDialogSave} disableElevation disabled={isFile === undefined || newFileOrFolderName.length === 0}>Save</Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={saveDialogOpen} maxWidth=\"sm\" fullWidth >\n                <DialogTitle>Save Function</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>Create an account to deploy your own functions!</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" variant=\"contained\" onClick={_ => setSaveDialogOpen(false)} disableElevation >Close</Button>\n                </DialogActions>\n            </Dialog>\n        </InfoPage>\n    )\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n            light: '#8b9aff',\n            dark: '#0c42a4'\n        },\n        secondary: {\n            main: '#ff9e22',\n            light: '#ffcf57',\n            dark: '#c66f00'\n        },\n        error: {\n            main: red.A400,\n        },\n        info : {\n            main: '#eceff1'\n        },\n        success: {\n            main: '#00C851'\n        },\n        background: {\n            default: '#fff',\n        },\n        grey: {\n            main: '#757575'\n        }\n    },\n    typography: {\n    },\n});\n\n/*\n\n    Elevation (dp)      Component\n    12\t                FAB (pressed state)\n    8\t                Raised button (presssed state)\n    6\t                FAB (resting state)\n    2\t                Raised button (resting state)\n\n*/\n\n/**\n * Selected light-blue Color #dbe2ff\n */\n\nexport default theme;","import './App.css';\nimport './bootstrap.css';\nimport Functions from './Functions';\nimport theme from './theme';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <CssBaseline />\n      <Functions />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}